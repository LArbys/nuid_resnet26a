name: "ResNet26aNuIDPlane0Validation"

############ Data Layer ###########
layer {
  name: "plane0_data"
  type: "ROOTData"
  top: "plane0_data"
  top: "label"

  root_data_param {
    batch_size: 9
    filler_config: "/data/shared/training/resnet26a_nuid/filler_cfg/train_filler_plane0.cfg"
    filler_name: "DataFiller"
  }
}

############ Actual Net ###########

layer {
	bottom: "plane0_data"
	top: "plane0_conv1"
	name: "plane0_conv1"
	type: "Convolution"
	convolution_param {
		num_output: 64
		kernel_size: 7
		pad: 3
		stride: 2
    		weight_filler {
		  type: "msra"
    		}
	}
}

layer {
	bottom: "plane0_conv1"
	top: "plane0_conv1"
	name: "plane0_bn_conv1"
	type: "BatchNorm"
	batch_norm_param {
		use_global_stats: false
	}
}

layer {
	bottom: "plane0_conv1"
	top: "plane0_conv1"
	name: "plane0_scale_conv1"
	type: "Scale"
	scale_param {
		bias_term: true
	}
}

layer {
	bottom: "plane0_conv1"
	top: "plane0_conv1"
	name: "plane0_conv1_relu"
	type: "ReLU"
}

layer {
	bottom: "plane0_conv1"
	top: "plane0_pool1"
	name: "plane0_pool1"
	type: "Pooling"
	pooling_param {
		kernel_size: 3
		stride: 2
		pool: MAX
	}
}

layer {
	bottom: "plane0_pool1"
	top: "plane0_res2a_branch1"
	name: "plane0_res2a_branch1"
	type: "Convolution"
	convolution_param {
		num_output: 64
		kernel_size: 3
		pad: 1
		stride: 1
		bias_term: false
    		weight_filler {
		  type: "msra"
    		}

	}
}

layer {
	bottom: "plane0_res2a_branch1"
	top: "plane0_res2a_branch1"
	name: "plane0_bn2a_branch1"
	type: "BatchNorm"
	batch_norm_param {
		use_global_stats: false
	}
}

layer {
	bottom: "plane0_res2a_branch1"
	top: "plane0_res2a_branch1"
	name: "scale2a_branch1"
	type: "Scale"
	scale_param {
		bias_term: true
	}
}

layer {
	bottom: "plane0_pool1"
	top: "plane0_res2a_branch2a"
	name: "plane0_res2a_branch2a"
	type: "Convolution"
	convolution_param {
		num_output: 64
		kernel_size: 3
		pad: 1
		stride: 1
		bias_term: false
    		weight_filler {
		  type: "msra"
    		}

	}
}

layer {
	bottom: "plane0_res2a_branch2a"
	top: "plane0_res2a_branch2a"
	name: "plane0_bn2a_branch2a"
	type: "BatchNorm"
	batch_norm_param {
		use_global_stats: false
	}
}

layer {
	bottom: "plane0_res2a_branch2a"
	top: "plane0_res2a_branch2a"
	name: "scale2a_branch2a"
	type: "Scale"
	scale_param {
		bias_term: true
	}
}

layer {
	bottom: "plane0_res2a_branch2a"
	top: "plane0_res2a_branch2a"
	name: "plane0_res2a_branch2a_relu"
	type: "ReLU"
}

layer {
	bottom: "plane0_res2a_branch2a"
	top: "plane0_res2a_branch2b"
	name: "plane0_res2a_branch2b"
	type: "Convolution"
	convolution_param {
		num_output: 64
		kernel_size: 3
		pad: 1
		stride: 1
		bias_term: false
    		weight_filler {
		  type: "msra"
    		}

	}
}

layer {
	bottom: "plane0_res2a_branch2b"
	top: "plane0_res2a_branch2b"
	name: "plane0_bn2a_branch2b"
	type: "BatchNorm"
	batch_norm_param {
		use_global_stats: false
	}
}

layer {
	bottom: "plane0_res2a_branch2b"
	top: "plane0_res2a_branch2b"
	name: "scale2a_branch2b"
	type: "Scale"
	scale_param {
		bias_term: true
	}
}

layer {
	bottom: "plane0_res2a_branch1"
	bottom: "plane0_res2a_branch2b"
	top: "plane0_res2a"
	name: "plane0_res2a"
	type: "Eltwise"
}

layer {
	bottom: "plane0_res2a"
	top: "plane0_res2a"
	name: "plane0_res2a_relu"
	type: "ReLU"
}

layer {
	bottom: "plane0_res2a"
	top: "plane0_res2b_branch2a"
	name: "plane0_res2b_branch2a"
	type: "Convolution"
	convolution_param {
		num_output: 64
		kernel_size: 3
		pad: 1
		stride: 1
		bias_term: false
    		weight_filler {
		  type: "msra"
    		}

	}
}

layer {
	bottom: "plane0_res2b_branch2a"
	top: "plane0_res2b_branch2a"
	name: "plane0_bn2b_branch2a"
	type: "BatchNorm"
	batch_norm_param {
		use_global_stats: false
	}
}

layer {
	bottom: "plane0_res2b_branch2a"
	top: "plane0_res2b_branch2a"
	name: "scale2b_branch2a"
	type: "Scale"
	scale_param {
		bias_term: true
	}
}

layer {
	bottom: "plane0_res2b_branch2a"
	top: "plane0_res2b_branch2a"
	name: "plane0_res2b_branch2a_relu"
	type: "ReLU"
}

layer {
	bottom: "plane0_res2b_branch2a"
	top: "plane0_res2b_branch2b"
	name: "plane0_res2b_branch2b"
	type: "Convolution"
	convolution_param {
		num_output: 64
		kernel_size: 3
		pad: 1
		stride: 1
		bias_term: false
    		weight_filler {
		  type: "msra"
    		}

	}
}

layer {
	bottom: "plane0_res2b_branch2b"
	top: "plane0_res2b_branch2b"
	name: "plane0_bn2b_branch2b"
	type: "BatchNorm"
	batch_norm_param {
		use_global_stats: false
	}
}

layer {
	bottom: "plane0_res2b_branch2b"
	top: "plane0_res2b_branch2b"
	name: "scale2b_branch2b"
	type: "Scale"
	scale_param {
		bias_term: true
	}
}

layer {
	bottom: "plane0_res2a"
	bottom: "plane0_res2b_branch2b"
	top: "plane0_res2b"
	name: "plane0_res2b"
	type: "Eltwise"
}

layer {
	bottom: "plane0_res2b"
	top: "plane0_res2b"
	name: "plane0_res2b_relu"
	type: "ReLU"
}

layer {
	bottom: "plane0_res2b"
	top: "plane0_res3a_branch1"
	name: "plane0_res3a_branch1"
	type: "Convolution"
	convolution_param {
		num_output: 128
		kernel_size: 3
		pad: 1
		stride: 2
		bias_term: false
    		weight_filler {
		  type: "msra"
    		}
	}
}

layer {
	bottom: "plane0_res3a_branch1"
	top: "plane0_res3a_branch1"
	name: "plane0_bn3a_branch1"
	type: "BatchNorm"
	batch_norm_param {
		use_global_stats: false
	}
}

layer {
	bottom: "plane0_res3a_branch1"
	top: "plane0_res3a_branch1"
	name: "scale3a_branch1"
	type: "Scale"
	scale_param {
		bias_term: true
	}
}

layer {
	bottom: "plane0_res2b"
	top: "plane0_res3a_branch2a"
	name: "plane0_res3a_branch2a"
	type: "Convolution"
	convolution_param {
		num_output: 128
		kernel_size: 3
		pad: 1
		stride: 2
		bias_term: false
    		weight_filler {
		  type: "msra"
    		}

	}
}

layer {
	bottom: "plane0_res3a_branch2a"
	top: "plane0_res3a_branch2a"
	name: "plane0_bn3a_branch2a"
	type: "BatchNorm"
	batch_norm_param {
		use_global_stats: false
	}
}

layer {
	bottom: "plane0_res3a_branch2a"
	top: "plane0_res3a_branch2a"
	name: "scale3a_branch2a"
	type: "Scale"
	scale_param {
		bias_term: true
	}
}

layer {
	bottom: "plane0_res3a_branch2a"
	top: "plane0_res3a_branch2a"
	name: "plane0_res3a_branch2a_relu"
	type: "ReLU"
}

layer {
	bottom: "plane0_res3a_branch2a"
	top: "plane0_res3a_branch2b"
	name: "plane0_res3a_branch2b"
	type: "Convolution"
	convolution_param {
		num_output: 128
		kernel_size: 3
		pad: 1
		stride: 1
		bias_term: false
    		weight_filler {
		  type: "msra"
    		}

	}
}

layer {
	bottom: "plane0_res3a_branch2b"
	top: "plane0_res3a_branch2b"
	name: "plane0_bn3a_branch2b"
	type: "BatchNorm"
	batch_norm_param {
		use_global_stats: false
	}
}

layer {
	bottom: "plane0_res3a_branch2b"
	top: "plane0_res3a_branch2b"
	name: "scale3a_branch2b"
	type: "Scale"
	scale_param {
		bias_term: true
	}
}

layer {
	bottom: "plane0_res3a_branch1"
	bottom: "plane0_res3a_branch2b"
	top: "plane0_res3a"
	name: "plane0_res3a"
	type: "Eltwise"
}

layer {
	bottom: "plane0_res3a"
	top: "plane0_res3a"
	name: "plane0_res3a_relu"
	type: "ReLU"
}

layer {
	bottom: "plane0_res3a"
	top: "plane0_res3b_branch2a"
	name: "plane0_res3b_branch2a"
	type: "Convolution"
	convolution_param {
		num_output: 128
		kernel_size: 3
		pad: 1
		stride: 1
		bias_term: false
    		weight_filler {
		  type: "msra"
    		}

	}
}

layer {
	bottom: "plane0_res3b_branch2a"
	top: "plane0_res3b_branch2a"
	name: "plane0_bn3b_branch2a"
	type: "BatchNorm"
	batch_norm_param {
		use_global_stats: false
	}
}

layer {
	bottom: "plane0_res3b_branch2a"
	top: "plane0_res3b_branch2a"
	name: "scale3b_branch2a"
	type: "Scale"
	scale_param {
		bias_term: true
	}
}

layer {
	bottom: "plane0_res3b_branch2a"
	top: "plane0_res3b_branch2a"
	name: "plane0_res3b_branch2a_relu"
	type: "ReLU"
}

layer {
	bottom: "plane0_res3b_branch2a"
	top: "plane0_res3b_branch2b"
	name: "plane0_res3b_branch2b"
	type: "Convolution"
	convolution_param {
		num_output: 128
		kernel_size: 3
		pad: 1
		stride: 1
		bias_term: false
    		weight_filler {
		  type: "msra"
    		}

	}
}

layer {
	bottom: "plane0_res3b_branch2b"
	top: "plane0_res3b_branch2b"
	name: "plane0_bn3b_branch2b"
	type: "BatchNorm"
	batch_norm_param {
		use_global_stats: false
	}
}

layer {
	bottom: "plane0_res3b_branch2b"
	top: "plane0_res3b_branch2b"
	name: "scale3b_branch2b"
	type: "Scale"
	scale_param {
		bias_term: true
	}
}

layer {
	bottom: "plane0_res3a"
	bottom: "plane0_res3b_branch2b"
	top: "plane0_res3b"
	name: "plane0_res3b"
	type: "Eltwise"
}

layer {
	bottom: "plane0_res3b"
	top: "plane0_res3b"
	name: "plane0_res3b_relu"
	type: "ReLU"
}

layer {
	bottom: "plane0_res3b"
	top: "plane0_res3c_branch2a"
	name: "plane0_res3c_branch2a"
	type: "Convolution"
	convolution_param {
		num_output: 128
		kernel_size: 3
		pad: 1
		stride: 1
		bias_term: false
    		weight_filler {
		  type: "msra"
    		}

	}
}

layer {
	bottom: "plane0_res3c_branch2a"
	top: "plane0_res3c_branch2a"
	name: "plane0_bn3c_branch2a"
	type: "BatchNorm"
	batch_norm_param {
		use_global_stats: false
	}
}

layer {
	bottom: "plane0_res3c_branch2a"
	top: "plane0_res3c_branch2a"
	name: "scale3c_branch2a"
	type: "Scale"
	scale_param {
		bias_term: true
	}
}

layer {
	bottom: "plane0_res3c_branch2a"
	top: "plane0_res3c_branch2a"
	name: "plane0_res3c_branch2a_relu"
	type: "ReLU"
}

layer {
	bottom: "plane0_res3c_branch2a"
	top: "plane0_res3c_branch2b"
	name: "plane0_res3c_branch2b"
	type: "Convolution"
	convolution_param {
		num_output: 128
		kernel_size: 3
		pad: 1
		stride: 1
		bias_term: false
    		weight_filler {
		  type: "msra"
    		}

	}
}

layer {
	bottom: "plane0_res3c_branch2b"
	top: "plane0_res3c_branch2b"
	name: "plane0_bn3c_branch2b"
	type: "BatchNorm"
	batch_norm_param {
		use_global_stats: false
	}
}

layer {
	bottom: "plane0_res3c_branch2b"
	top: "plane0_res3c_branch2b"
	name: "scale3c_branch2b"
	type: "Scale"
	scale_param {
		bias_term: true
	}
}

layer {
	bottom: "plane0_res3b"
	bottom: "plane0_res3c_branch2b"
	top: "plane0_res3c"
	name: "plane0_res3c"
	type: "Eltwise"
}

layer {
	bottom: "plane0_res3c"
	top: "plane0_res3c"
	name: "plane0_res3c_relu"
	type: "ReLU"
}

layer {
	bottom: "plane0_res3c"
	top: "plane0_res4a_branch1"
	name: "plane0_res4a_branch1"
	type: "Convolution"
	convolution_param {
		num_output: 256
		kernel_size: 3
		pad: 1
		stride: 2
		bias_term: false
    		weight_filler {
		  type: "msra"
    		}

	}
}

layer {
	bottom: "plane0_res4a_branch1"
	top: "plane0_res4a_branch1"
	name: "plane0_bn4a_branch1"
	type: "BatchNorm"
	batch_norm_param {
		use_global_stats: false
	}
}

layer {
	bottom: "plane0_res4a_branch1"
	top: "plane0_res4a_branch1"
	name: "scale4a_branch1"
	type: "Scale"
	scale_param {
		bias_term: true
	}
}

layer {
	bottom: "plane0_res3c"
	top: "plane0_res4a_branch2a"
	name: "plane0_res4a_branch2a"
	type: "Convolution"
	convolution_param {
		num_output: 256
		kernel_size: 3
		pad: 1
		stride: 2
		bias_term: false
    		weight_filler {
		  type: "msra"
    		}

	}
}

layer {
	bottom: "plane0_res4a_branch2a"
	top: "plane0_res4a_branch2a"
	name: "plane0_bn4a_branch2a"
	type: "BatchNorm"
	batch_norm_param {
		use_global_stats: false
	}
}

layer {
	bottom: "plane0_res4a_branch2a"
	top: "plane0_res4a_branch2a"
	name: "scale4a_branch2a"
	type: "Scale"
	scale_param {
		bias_term: true
	}
}

layer {
	bottom: "plane0_res4a_branch2a"
	top: "plane0_res4a_branch2a"
	name: "plane0_res4a_branch2a_relu"
	type: "ReLU"
}

layer {
	bottom: "plane0_res4a_branch2a"
	top: "plane0_res4a_branch2b"
	name: "plane0_res4a_branch2b"
	type: "Convolution"
	convolution_param {
		num_output: 256
		kernel_size: 3
		pad: 1
		stride: 1
		bias_term: false
    		weight_filler {
		  type: "msra"
    		}

	}
}

layer {
	bottom: "plane0_res4a_branch2b"
	top: "plane0_res4a_branch2b"
	name: "plane0_bn4a_branch2b"
	type: "BatchNorm"
	batch_norm_param {
		use_global_stats: false
	}
}

layer {
	bottom: "plane0_res4a_branch2b"
	top: "plane0_res4a_branch2b"
	name: "scale4a_branch2b"
	type: "Scale"
	scale_param {
		bias_term: true
	}
}

layer {
	bottom: "plane0_res4a_branch1"
	bottom: "plane0_res4a_branch2b"
	top: "plane0_res4a"
	name: "plane0_res4a"
	type: "Eltwise"
}

layer {
	bottom: "plane0_res4a"
	top: "plane0_res4a"
	name: "plane0_res4a_relu"
	type: "ReLU"
}

layer {
	bottom: "plane0_res4a"
	top: "plane0_res4b_branch2a"
	name: "plane0_res4b_branch2a"
	type: "Convolution"
	convolution_param {
		num_output: 256
		kernel_size: 3
		pad: 1
		stride: 1
		bias_term: false
    		weight_filler {
		  type: "msra"
    		}

	}
}

layer {
	bottom: "plane0_res4b_branch2a"
	top: "plane0_res4b_branch2a"
	name: "plane0_bn4b_branch2a"
	type: "BatchNorm"
	batch_norm_param {
		use_global_stats: false
	}
}

layer {
	bottom: "plane0_res4b_branch2a"
	top: "plane0_res4b_branch2a"
	name: "scale4b_branch2a"
	type: "Scale"
	scale_param {
		bias_term: true
	}
}

layer {
	bottom: "plane0_res4b_branch2a"
	top: "plane0_res4b_branch2a"
	name: "plane0_res4b_branch2a_relu"
	type: "ReLU"
}

layer {
	bottom: "plane0_res4b_branch2a"
	top: "plane0_res4b_branch2b"
	name: "plane0_res4b_branch2b"
	type: "Convolution"
	convolution_param {
		num_output: 256
		kernel_size: 3
		pad: 1
		stride: 1
		bias_term: false
    		weight_filler {
		  type: "msra"
    		}

	}
}

layer {
	bottom: "plane0_res4b_branch2b"
	top: "plane0_res4b_branch2b"
	name: "plane0_bn4b_branch2b"
	type: "BatchNorm"
	batch_norm_param {
		use_global_stats: false
	}
}

layer {
	bottom: "plane0_res4b_branch2b"
	top: "plane0_res4b_branch2b"
	name: "scale4b_branch2b"
	type: "Scale"
	scale_param {
		bias_term: true
	}
}

layer {
	bottom: "plane0_res4a"
	bottom: "plane0_res4b_branch2b"
	top: "plane0_res4b"
	name: "plane0_res4b"
	type: "Eltwise"
}

layer {
	bottom: "plane0_res4b"
	top: "plane0_res4b"
	name: "plane0_res4b_relu"
	type: "ReLU"
}

layer {
	bottom: "plane0_res4b"
	top: "plane0_res4c_branch2a"
	name: "plane0_res4c_branch2a"
	type: "Convolution"
	convolution_param {
		num_output: 256
		kernel_size: 3
		pad: 1
		stride: 1
		bias_term: false
    		weight_filler {
		  type: "msra"
    		}

	}
}

layer {
	bottom: "plane0_res4c_branch2a"
	top: "plane0_res4c_branch2a"
	name: "plane0_bn4c_branch2a"
	type: "BatchNorm"
	batch_norm_param {
		use_global_stats: false
	}
}

layer {
	bottom: "plane0_res4c_branch2a"
	top: "plane0_res4c_branch2a"
	name: "scale4c_branch2a"
	type: "Scale"
	scale_param {
		bias_term: true
	}
}

layer {
	bottom: "plane0_res4c_branch2a"
	top: "plane0_res4c_branch2a"
	name: "plane0_res4c_branch2a_relu"
	type: "ReLU"
}

layer {
	bottom: "plane0_res4c_branch2a"
	top: "plane0_res4c_branch2b"
	name: "plane0_res4c_branch2b"
	type: "Convolution"
	convolution_param {
		num_output: 256
		kernel_size: 3
		pad: 1
		stride: 1
		bias_term: false
    		weight_filler {
		  type: "msra"
    		}

	}
}

layer {
	bottom: "plane0_res4c_branch2b"
	top: "plane0_res4c_branch2b"
	name: "plane0_bn4c_branch2b"
	type: "BatchNorm"
	batch_norm_param {
		use_global_stats: false
	}
}

layer {
	bottom: "plane0_res4c_branch2b"
	top: "plane0_res4c_branch2b"
	name: "scale4c_branch2b"
	type: "Scale"
	scale_param {
		bias_term: true
	}
}

layer {
	bottom: "plane0_res4b"
	bottom: "plane0_res4c_branch2b"
	top: "plane0_res4c"
	name: "plane0_res4c"
	type: "Eltwise"
}

layer {
	bottom: "plane0_res4c"
	top: "plane0_res4c"
	name: "plane0_res4c_relu"
	type: "ReLU"
}

layer {
	bottom: "plane0_res4c"
	top: "plane0_res4d_branch2a"
	name: "plane0_res4d_branch2a"
	type: "Convolution"
	convolution_param {
		num_output: 256
		kernel_size: 3
		pad: 1
		stride: 1
		bias_term: false
    		weight_filler {
		  type: "msra"
    		}

	}
}

layer {
	bottom: "plane0_res4d_branch2a"
	top: "plane0_res4d_branch2a"
	name: "plane0_bn4d_branch2a"
	type: "BatchNorm"
	batch_norm_param {
		use_global_stats: false
	}
}

layer {
	bottom: "plane0_res4d_branch2a"
	top: "plane0_res4d_branch2a"
	name: "scale4d_branch2a"
	type: "Scale"
	scale_param {
		bias_term: true
	}
}

layer {
	bottom: "plane0_res4d_branch2a"
	top: "plane0_res4d_branch2a"
	name: "plane0_res4d_branch2a_relu"
	type: "ReLU"
}

layer {
	bottom: "plane0_res4d_branch2a"
	top: "plane0_res4d_branch2b"
	name: "plane0_res4d_branch2b"
	type: "Convolution"
	convolution_param {
		num_output: 256
		kernel_size: 3
		pad: 1
		stride: 1
		bias_term: false
    		weight_filler {
		  type: "msra"
    		}

	}
}

layer {
	bottom: "plane0_res4d_branch2b"
	top: "plane0_res4d_branch2b"
	name: "plane0_bn4d_branch2b"
	type: "BatchNorm"
	batch_norm_param {
		use_global_stats: false
	}
}

layer {
	bottom: "plane0_res4d_branch2b"
	top: "plane0_res4d_branch2b"
	name: "scale4d_branch2b"
	type: "Scale"
	scale_param {
		bias_term: true
	}
}

layer {
	bottom: "plane0_res4c"
	bottom: "plane0_res4d_branch2b"
	top: "plane0_res4d"
	name: "plane0_res4d"
	type: "Eltwise"
}

layer {
	bottom: "plane0_res4d"
	top: "plane0_res4d"
	name: "plane0_res4d_relu"
	type: "ReLU"
}

layer {
	bottom: "plane0_res4d"
	top: "plane0_res5a_branch1"
	name: "plane0_res5a_branch1"
	type: "Convolution"
	convolution_param {
		num_output: 512
		kernel_size: 3
		pad: 1
		stride: 2
		bias_term: false
    		weight_filler {
		  type: "msra"
    		}

	}
}

layer {
	bottom: "plane0_res5a_branch1"
	top: "plane0_res5a_branch1"
	name: "plane0_bn5a_branch1"
	type: "BatchNorm"
	batch_norm_param {
		use_global_stats: false
	}
}

layer {
	bottom: "plane0_res5a_branch1"
	top: "plane0_res5a_branch1"
	name: "scale5a_branch1"
	type: "Scale"
	scale_param {
		bias_term: true
	}
}

layer {
	bottom: "plane0_res4d"
	top: "plane0_res5a_branch2a"
	name: "plane0_res5a_branch2a"
	type: "Convolution"
	convolution_param {
		num_output: 512
		kernel_size: 3
		pad: 1
		stride: 2
		bias_term: false
    		weight_filler {
		  type: "msra"
    		}

	}
}

layer {
	bottom: "plane0_res5a_branch2a"
	top: "plane0_res5a_branch2a"
	name: "plane0_bn5a_branch2a"
	type: "BatchNorm"
	batch_norm_param {
		use_global_stats: false
	}
}

layer {
	bottom: "plane0_res5a_branch2a"
	top: "plane0_res5a_branch2a"
	name: "scale5a_branch2a"
	type: "Scale"
	scale_param {
		bias_term: true
	}
}

layer {
	bottom: "plane0_res5a_branch2a"
	top: "plane0_res5a_branch2a"
	name: "plane0_res5a_branch2a_relu"
	type: "ReLU"
}

layer {
	bottom: "plane0_res5a_branch2a"
	top: "plane0_res5a_branch2b"
	name: "plane0_res5a_branch2b"
	type: "Convolution"
	convolution_param {
		num_output: 512
		kernel_size: 3
		pad: 1
		stride: 1
		bias_term: false
    		weight_filler {
		  type: "msra"
    		}

	}
}

layer {
	bottom: "plane0_res5a_branch2b"
	top: "plane0_res5a_branch2b"
	name: "plane0_bn5a_branch2b"
	type: "BatchNorm"
	batch_norm_param {
		use_global_stats: false
	}
}

layer {
	bottom: "plane0_res5a_branch2b"
	top: "plane0_res5a_branch2b"
	name: "scale5a_branch2b"
	type: "Scale"
	scale_param {
		bias_term: true
	}
}

layer {
	bottom: "plane0_res5a_branch1"
	bottom: "plane0_res5a_branch2b"
	top: "plane0_res5a"
	name: "plane0_res5a"
	type: "Eltwise"
}

layer {
	bottom: "plane0_res5a"
	top: "plane0_res5a"
	name: "plane0_res5a_relu"
	type: "ReLU"
}

layer {
	bottom: "plane0_res5a"
	top: "plane0_res5b_branch2a"
	name: "plane0_res5b_branch2a"
	type: "Convolution"
	convolution_param {
		num_output: 512
		kernel_size: 3
		pad: 1
		stride: 1
		bias_term: false
    		weight_filler {
		  type: "msra"
    		}

	}
}

layer {
	bottom: "plane0_res5b_branch2a"
	top: "plane0_res5b_branch2a"
	name: "plane0_bn5b_branch2a"
	type: "BatchNorm"
	batch_norm_param {
		use_global_stats: false
	}
}

layer {
	bottom: "plane0_res5b_branch2a"
	top: "plane0_res5b_branch2a"
	name: "scale5b_branch2a"
	type: "Scale"
	scale_param {
		bias_term: true
	}
}

layer {
	bottom: "plane0_res5b_branch2a"
	top: "plane0_res5b_branch2a"
	name: "plane0_res5b_branch2a_relu"
	type: "ReLU"
}

layer {
	bottom: "plane0_res5b_branch2a"
	top: "plane0_res5b_branch2b"
	name: "plane0_res5b_branch2b"
	type: "Convolution"
	convolution_param {
		num_output: 512
		kernel_size: 3
		pad: 1
		stride: 1
		bias_term: false
    		weight_filler {
		  type: "msra"
    		}

	}
}

layer {
	bottom: "plane0_res5b_branch2b"
	top: "plane0_res5b_branch2b"
	name: "plane0_bn5b_branch2b"
	type: "BatchNorm"
	batch_norm_param {
		use_global_stats: false
	}
}

layer {
	bottom: "plane0_res5b_branch2b"
	top: "plane0_res5b_branch2b"
	name: "scale5b_branch2b"
	type: "Scale"
	scale_param {
		bias_term: true
	}
}

layer {
	bottom: "plane0_res5a"
	bottom: "plane0_res5b_branch2b"
	top: "plane0_res5b"
	name: "plane0_res5b"
	type: "Eltwise"
}

layer {
	bottom: "plane0_res5b"
	top: "plane0_res5b"
	name: "plane0_res5b_relu"
	type: "ReLU"
}

layer {
	bottom: "plane0_res5b"
	top: "plane0_res5c_branch2a"
	name: "plane0_res5c_branch2a"
	type: "Convolution"
	convolution_param {
		num_output: 512
		kernel_size: 3
		pad: 1
		stride: 1
		bias_term: false
    		weight_filler {
		  type: "msra"
    		}

	}
}

layer {
	bottom: "plane0_res5c_branch2a"
	top: "plane0_res5c_branch2a"
	name: "plane0_bn5c_branch2a"
	type: "BatchNorm"
	batch_norm_param {
		use_global_stats: false
	}
}

layer {
	bottom: "plane0_res5c_branch2a"
	top: "plane0_res5c_branch2a"
	name: "scale5c_branch2a"
	type: "Scale"
	scale_param {
		bias_term: true
	}
}

layer {
	bottom: "plane0_res5c_branch2a"
	top: "plane0_res5c_branch2a"
	name: "plane0_res5c_branch2a_relu"
	type: "ReLU"
}

layer {
	bottom: "plane0_res5c_branch2a"
	top: "plane0_res5c_branch2b"
	name: "plane0_res5c_branch2b"
	type: "Convolution"
	convolution_param {
		num_output: 512
		kernel_size: 3
		pad: 1
		stride: 1
		bias_term: false
    		weight_filler {
		  type: "msra"
    		}

	}
}

layer {
	bottom: "plane0_res5c_branch2b"
	top: "plane0_res5c_branch2b"
	name: "plane0_bn5c_branch2b"
	type: "BatchNorm"
	batch_norm_param {
		use_global_stats: false
	}
}

layer {
	bottom: "plane0_res5c_branch2b"
	top: "plane0_res5c_branch2b"
	name: "scale5c_branch2b"
	type: "Scale"
	scale_param {
		bias_term: true
	}
}

layer {
	bottom: "plane0_res5b"
	bottom: "plane0_res5c_branch2b"
	top: "plane0_res5c"
	name: "plane0_res5c"
	type: "Eltwise"
}

layer {
	bottom: "plane0_res5c"
	top: "plane0_res5c"
	name: "plane0_res5c_relu"
	type: "ReLU"
}

layer {
	bottom: "plane0_res5c"
	top: "pool5"
	name: "pool5"
	type: "Pooling"
	pooling_param {
		kernel_w: 27
		kernel_h: 24
		stride: 1
		pool: AVE
	}
}

#layer {
#	bottom: "pool5"
#	top: "fc5"
#	name: "fc5"
#	type: "InnerProduct"
#	inner_product_param {
#		num_output: 5
#	}
#}

#layer {
#	bottom: "fc5"
#	top: "prob"
#	name: "prob"
#	type: "Softmax"
#}

layer {
  name: "fc"
  bottom: "pool5"
  top: "fc"
  type: "InnerProduct"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 2
    weight_filler {
      type: "msra"
    }      
  }

}
layer {
  name: "acc"
  type: "Accuracy"
  bottom: "fc"
  bottom: "label"
  top: "acc"
}
layer {
  name: "softmax"
  type: "Softmax"
  bottom: "fc"
  top: "softmax"
}
